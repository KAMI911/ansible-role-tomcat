---
# task file for application download

- name: check if application is installed.
  stat:
    path: '{{ __app_dir }}/{{ __app_check_file }}'
  register: __app_installed

- block:
    - name: create application group
      group:
        name: '{{ __app_system_group }}'
        system: true
        state: present

    - name: create application user
      user:
        name: '{{ __app_system_user }}'
        group: '{{ __app_system_group }}'
        createhome: false
        state: present
        system: true
  when: __app_manage_user

- name: 'create application directory: {{ __app_dir }}'
  file:
    path: '{{ __app_dir }}'
    owner: '{{ __app_system_user }}'
    group: '{{ __app_system_group }}'
    mode: '{{ __app_dir_mode }}'
    recurse: true
    state: directory
  when: (not __app_installed.stat.exists or __app_force_update)

- name: is already downloaded locally
  stat:
    path: '{{ __app_download_file }}'
  delegate_to: localhost
  register: __applicaton_is_local_download_file
  when: __app_installer_local

- name: is already downloaded
  stat:
    path: '{{ __app_download_dir }}/{{ __app_download_file }}'
  register: __app_is_download_file

- name: create download directory
  file:
    path: '{{ __app_download_dir }}'
    owner: '{{ __app_system_user }}'
    group: '{{ __app_system_group }}'
    mode: '{{ __app_dir_mode }}'
    recurse: true
    state: directory
  when: (not __app_installed.stat.exists or __app_installer_force_overwrite or not __app_is_download_file.stat.exists)

- block:
    - name: 'downloading application {{ __app_download_file }} to local machine'
      get_url:
        url: '{{ __app_download_url }}'
        validate_certs: '{{ __app_download_validate_certs }}'
        dest: './{{ __app_download_file }}'
        mode: 0644
      delegate_to: localhost
      run_once: true
      when: (not __applicaton_is_local_download_file.stat.exists or __app_installer_force_overwrite) or __app_installer_force_download

    - name: copy downloaded application tar file
      copy:
        src: './{{ __app_download_file }}'
        dest: '{{ __app_download_dir }}/{{ __app_download_file }}'
        mode: 0644
      when: __app_installer_force_overwrite or not __app_is_download_file.stat.exists
  when: __app_installer_local

- name: 'download application tar file {{ __app_download_file }}'
  get_url:
    url: '{{ __app_download_url }}'
    dest: '{{ __app_download_dir }}/{{ __app_download_file }}'
    validate_certs: '{{ __app_download_validate_certs }}'
    mode: 0644
  when: (not __app_is_download_file.stat.exists or __app_installer_force_overwrite) and __app_installer_force_download and not __app_installer_local
