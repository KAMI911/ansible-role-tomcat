<?xml version="1.0" encoding="UTF-8"?>
<!-- {{ ansible_managed }} -->
<Server port="{{ tomcat_shutdown_port }}" shutdown="{{ tomcat_shutdown_command }}">
  <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
  <!-- Security listener. Documentation at /docs/config/listeners.html
  <Listener className="org.apache.catalina.security.SecurityListener" />
  -->
  <!--APR library loader. Documentation at /docs/apr.html -->
  <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
  <!-- Prevent memory leaks due to use of particular java/javax APIs-->
  <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
  <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />

  <!-- Global JNDI resources
       Documentation at /docs/jndi-resources-howto.html
  -->
  <GlobalNamingResources>
    <!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users
    -->
    <Resource name="UserDatabase" auth="Container"
              type="org.apache.catalina.UserDatabase"
              description="User database that can be updated and saved"
              factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
              pathname="conf/tomcat-users.xml" />
  </GlobalNamingResources>

  <!-- A "Service" is a collection of one or more "Connectors" that share
       a single "Container" Note:  A "Service" is not itself a "Container",
       so you may not define subcomponents such as "Valves" at this level.
       Documentation at /docs/config/service.html
   -->
  <Service name="Catalina">
{% for server in (tomcat_server) %}{% if server.executor is defined %}
  <Executor {% for attr_key in server.executor.keys() %}

    {{ attr_key }}="{{ server.executor[attr_key] }}"{% endfor %} />

{% endif %}
{% endfor %}

{% for server in (tomcat_server) %}{% if server.connector is defined %}
  <Connector port="{{ server.port }}"{% for attr_key in server.connector.keys() %}

    {{ attr_key }}="{{ server.connector[attr_key] }}"{% endfor %} />

{% endif %}{% endfor %}

    <!-- An Engine represents the entry point (within Catalina) that processes
         every request.  The Engine implementation for Tomcat stand alone
         analyzes the HTTP headers included with the request, and passes them
         on to the appropriate Host (virtual host).
         Documentation at /docs/config/engine.html -->

    <!-- You should set jvmRoute to support load-balancing via AJP ie :
    <Engine name="Catalina" defaultHost="localhost" jvmRoute="jvm1">
    -->
    <Engine name="Catalina" defaultHost="localhost">

      <!--For clustering, please take a look at documentation at:
          /docs/cluster-howto.html  (simple how to)
          /docs/config/cluster.html (reference documentation) -->
      <!--
      <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/>
      -->

      <!-- Use the LockOutRealm to prevent attempts to guess user passwords
           via a brute-force attack -->
      <Realm className="org.apache.catalina.realm.LockOutRealm">
{% if tomcat_ldap_enable == True %}
        <Realm className="org.apache.catalina.realm.JNDIRealm" debug="{{ tomcat_ldap_debug_level }}"
          connectionURL="{{ tomcat_ldap_url }}"
          connectionName="{{ tomcat_ldap_user }}"
          connectionPassword="{{ tomcat_ldap_pass }}"
          referrals="{{ tomcat_ldap_user_referrals }}"
          userBase="{{ tomcat_ldap_user_ou }}"
          userSearch="{{ tomcat_ldap_user_name }}"
          userSubtree="{% if tomcat_ldap_user_subtree == true %}true{% else %}false{% endif %}"
          roleBase="{{ tomcat_ldap_role_ou }}"
          roleName="{{ tomcat_ldap_role_name }}"
          roleSubtree="{% if tomcat_ldap_role_subtree == true %}true{% else %}false{% endif %}"
          roleSearch="{{ tomcat_ldap_role_search }}" >
        </Realm>
{% endif %}
        <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
               resourceName="UserDatabase"{% if tomcat_majorversion < 8 %} digest="sha-512"{% endif %}>
{% if tomcat_majorversion >= 8 %}
          <CredentialHandler className="org.apache.catalina.realm.MessageDigestCredentialHandler" algorithm="SHA-512" />
{% endif %}
        </Realm>
      </Realm>

      <Host name="localhost"  appBase="webapps"
            unpackWARs="true" autoDeploy="true">

        <!-- SingleSignOn valve, share authentication between web applications
             Documentation at: /docs/config/valve.html -->
        <!--
        <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
        -->

        <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs/access"
               prefix="{{ tomcat_access_log_filename }}" suffix="{{ tomcat_access_log_extension }}" renameOnRotate="true"
               pattern="{{ tomcat_access_log_pattern }}" />

      </Host>
    </Engine>
  </Service>
</Server>
