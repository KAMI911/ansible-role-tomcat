#!/bin/bash
# {{ ansible_managed }}
#
# /etc/init.d/{{ tomcat_process_name }} -- startup script for the Tomcat servlet engine
# description: Apache Tomcat init script
# processname: tomcat
# chkconfig: 234 20 80
#
#
# Copyright (C) 2014 Miglen Evlogiev
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Initially forked from: gist.github.com/valotas/1000094
# Source: gist.github.com/miglen/5590986

NAME="{{ tomcat_process_name }}"
DESC="{{ tomcat_process_name }} servlet engine"
DEFAULT="/etc/default/$NAME"
JVM_TMP="/tmp/tomcat-$NAME-tmp"

#Location of JAVA_HOME (bin files)
export JAVA_HOME="{{ java_home }}"
{% if tomcat_java_version >= 9 %}
export JRE_HOME="{{ java_home }}"
{% endif %}

#Add Java binary files to PATH
export PATH="$JAVA_HOME/bin:$PATH"

# CATALINA_HOME is the directory where the Tomcat binary distribution resides
export CATALINA_HOME="{{ tomcat_catalina_home }}"

# CATALINA_BASE is the directory for per-instance configuration files and webapps
export CATALINA_BASE="{{ tomcat_catalina_base }}"

#TOMCAT_USER is the default user of tomcat
export TOMCAT_USER="{{ tomcat_system_user }}"
export TOMCAT_GROUP="{{ tomcat_system_group }}"

#TOMCAT_USAGE is the message if this script is called without any options
TOMCAT_USAGE="Usage: $0 {\e[00;32mstart\e[00m|\e[00;31mstop\e[00m|\e[00;31mkill\e[00m|\e[00;32mstatus\e[00m|\e[00;31mrestart\e[00m}"

#SHUTDOWN_WAIT is wait time in seconds for java proccess to stop
SHUTDOWN_WAIT=30

tomcat_pid() {
        echo `ps -fe | grep $CATALINA_BASE | grep -v grep | tr -s " "|cut -d" " -f2`
}

start() {
  pid=$(tomcat_pid)
  current_dir=$(pwd)
  if [ -n "$pid" ]
  then
    echo -e "\e[00;31mTomcat is already running (pid: $pid)\e[00m"
  else
    # Start tomcat
    echo -e "\e[00;32mStarting tomcat\e[00m"
    cd $CATALINA_HOME
    #ulimit -n 100000
    #umask 007
    #/bin/su -p -s /bin/sh $TOMCAT_USER
        if [ `user_exists $TOMCAT_USER` = "1" ]
        then
                /bin/su $TOMCAT_USER -c $CATALINA_HOME/bin/startup.sh
        else
                echo -e "\e[00;31mTomcat user $TOMCAT_USER does not exists. Starting with $(id)\e[00m"
                sh $CATALINA_HOME/bin/startup.sh
        fi
        cd $current_dir
        status
  fi
  return 0
}

status(){
          pid=$(tomcat_pid)
          if [ -n "$pid" ]
            then echo -e "\e[00;32mTomcat is running with pid: $pid\e[00m"
          else
            echo -e "\e[00;31mTomcat is not running\e[00m"
            return 3
          fi
}

terminate() {
    echo -e "\e[00;31mTerminating Tomcat\e[00m"
    kill -9 $(tomcat_pid)
}

stop() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo -e "\e[00;31mStoping Tomcat\e[00m"
    #/bin/su -p -s /bin/sh $TOMCAT_USER
        sh $CATALINA_HOME/bin/shutdown.sh

    let kwait=$SHUTDOWN_WAIT
    count=0;
    echo -n -e "\n\e[00;31mWaiting for processes to exit (\e[00m";
    until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $kwait ]
    do
      echo -n -e "\e[00;31m.\e[00m";
      sleep 1
      let count=$count+1;
    done

    if [ $count -gt $kwait ]; then
      echo -n -e "\e[00;31m)\nKilling processes didn't stop after $SHUTDOWN_WAIT seconds\e[00m\n"
      terminate
    else
      echo -n -e "\e[00;31m)\e[00m\nTomcat has stopped within $count seconds\n"
    fi
  else
    echo -e "\e[00;31mTomcat is not running\e[00m"
  fi

  return 0
}

user_exists(){
        if id -u $1 >/dev/null 2>&1; then
        echo "1"
        else
                echo "0"
        fi
}

case $1 in
    start)
      start
    ;;
    stop)
      stop
    ;;
    restart)
      stop
      start
    ;;
    status)
        status
        exit $?
    ;;
    kill)
        terminate
    ;;
    *)
        echo -e $TOMCAT_USAGE
    ;;
esac
exit 0
